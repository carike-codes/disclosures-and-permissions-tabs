


























{
   "$schema": "https://core.trac.wordpress.org/ticket/51092",
   "$id": "https://example.com/to.be.filled.in.later.disclosures.json",
   "description": "The vision of the Disclosures Tab is for site administrators to understand their site's privacy risk profile and to make more informed privacy-related choices as a result. The mission of the Disclosures Tab is to help site administrators understand what information their site collects, where it is stored and where it is sent - and in particular, with whom it is shared.",
   "type": "object",
   "properties": {
      "details": {
         "type": "object",
         "properties": {
            "component": {
               "description": "Please enter one of the following values: plugin, theme, or the specific Core component",
               "type": "string"
            },
            "slug": {
               "description": "Please supply the slug, if the code relates to a plugin or a theme.",
               "type": "string"
            },
            "version": {
               "description": "Please supply which version of disclosures.json this represents for the individual component.",
               "type": "string"
            },
            "since": {
               "description": "Please supply the plugin or theme's version number, or the Core version, if the component is a Core component, which introduced the current version of this disclosures.json file, i.e. this should represent the since value.",
               "type": "string"
            }
         }
      },
      "licenses": {
         "type": "object",
         "properties": {
            "code": {
               "description": "Please provide a URL to the license that applies to this component (plugin, theme, or Core component)'s use.",
               "type": "string"
            },
            "localAssets": {
               "description": "Please provide a comma-separated list of URLs to the license that applies to the use of each asset that has been included locally. This includes the license of any bundled libraries, as well as the licenses of any images, fonts, etc.",
               "type": "array",
               "items": {
                  "type": "string",
                  "format": "uri-reference"
               },
               "uniqueItems": true
            },
            "remoteAssets": {
               "description": "Please provide a comma-separated list of URLs to the license that applies to the use of each asset that is accessed remotely. This includes the licenses of any external libraries, as well as the licenses of any images, fonts, etc.",
               "type": "array",
               "items": {
                  "type": "string",
                  "format": "uri-reference"
               },
               "uniqueItems": true
            }
         }
      },
      "external": {
         "description": "A comma-separated list of URLs containing the links to the Privacy Policies of the sites to which the calls to external networks are being made.",
         "type": "object",
         "properties": {
            "PHP": {
               "description": "A comma-separated list of URLs of links to the respective Privacy Policies of the sites to which the external network calls are being made in PHP.",
               "type": "array",
               "items": {
                  "type": "string",
                  "format": "uri-reference"
               },
               "uniqueItems": true
            },
            "JavaScript": {
               "description": "A comma-separated list of URLs of links to the respective Privacy Policies of the sites to which the external network calls are being made in JavaScript.",
               "type": "array",
               "items": {
                  "type": "string",
                  "format": "uri-reference"
               },
               "uniqueItems": true
            },
            "CSS": {
               "description": "A comma-separated list of URLs of links to the respective Privacy Policies of the sites to which the external network calls are being made in CSS.",
               "type": "array",
               "items": {
                  "type": "string",
                  "format": "uri-reference"
               },
               "uniqueItems": true
            }
         }
      },
      "terms": {
         "type": "object"
         "description": "A comma-separated list to third party Terms and Conditions, if applicable.",
         "properties": {
            "SaaS": {
               "description": "A comma-separated list of URLs to the Terms of Service of any instances of Software as a Service.",
               "type": "array",
               "items": {
                  "type": "string",
                  "format": "uri-reference"
               },
               "uniqueItems": true
            },
            "externalAPIs": {
               "description": "A comma-separated list of URLs to the Terms of Service of any external API being used.",
               "type": "array",
               "items": {
                  "type": "string",
                  "format": "uri-reference"
               },
               "uniqueItems": true
            },
            "remoteAssets": {
               "description": "A comma-separated list of URLs to the Terms of Service that applies to the use of each remote asset. This relates to the use of CDNs for images, fonts, etc.",
               "type": "array",
               "items": {
                  "type": "string",
                  "format": "uri-reference"
               },
               "uniqueItems": true
            },
            "registration": {
               "description": "Please provide a comma-separated list of URLs to the Terms of Service that apply to any accounts that need to be registered in order to be able to make use of this component's code.",
               "type": "array",
               "items": {
                  "type": "string",
                  "format": "uri-reference"
               },
               "uniqueItems": true
            }
         }
      },
      "openWeb": {
         "type": "object",
         "description": "Details about mechanisms that allow others to obtain information from the site without browsing the website's front end.",
         "properties": {
            "apiEndpoints": {
               "description": "A comma-separated list of URLs for any internal API endpoints that are created by the code.",
               "type": "array",
               "items": {
                  "type": "string",
                  "format": "uri-reference"
               },
               "uniqueItems": true
            },
            "feeds": {
               "description": "A comma-separated list of URLs for any internal feeds that are created by the code.",
               "type": "array",
               "items": {
                  "type": "string",
                  "format": "uri-reference"
               },
               "uniqueItems": true
            }
         }
      },
      "clientSide": {
         "type": "object",
         "properties": {
            "setsCookiesPHP": {
               "description": "The names of any cookies that have been set using PHP.",
               "type": "array",
               "items": {
                  "type": "string",
               },
               "uniqueItems": true
            },
            "setsCookiesJavaScript": {
               "description": "The names of any cookies that have been set using JavaScript.",
               "type": "array",
               "items": {
                  "type": "string",
               },
               "uniqueItems": true
            },
            "usesLocalStorage": {
               "description": "Whether or not the code makes use of local storage.",
               "type": "boolean"
            }
         }
      },
      "database": {
         "type": "object",
         "properties": {
            "writesToDB": {
               "description": "Whether or not the code writes to the database.",
               "type": "object",
               "properties": {
                  "auto": {
                     "description": "Whether or not the code writes to the database in relation to information that is not explicitly input by a user.",
                     "type": "boolean"
                  },
                  "manual": {
                     "description": "Whether or not the code writes to the database that is not explicitly input by a user.",
                     "type": "boolean"
                  }
               }
            },
            "CPT": {
               "type": "object",
               "description": "Please indicate whether the component creates any Custom Post Types.",
               "properties": {
                  "auto": {
                     "description": "Please indicate the number of Custom Post Types that are automatically created by the code without user intervention.",
                     "type": "integer",
                     "minimum": 0
                  },
                  "manual": {
                     "description": "Please indicate whether the code allows for users to generate Custom Post Types.",
                     "type": "boolean"
                  }
               }
            },
            "customTables": {
               "description": "Please indicate whether the code creates any custom tables in the database.",
               "type": "object",
               "properties": {
                  "auto": {
                     "description": "Please indicate the number of custom tables that are automatically created by the code without user intervention.",
                     "type": "integer",
                     "minimum": 0
                  },
                  "manual": {
                     "description": "Please indicate whether the code allows the user to create any custom tables.",
                     "type": "boolean"
                  }
               }
            }
         }
      },
      "otherStorage": {
         "type": "object",
         "properties": {
            "writesToFiles": {
               "description": "A comma-separated list of file types the code writes to (e.g. .txt).",
               "type": "array",
               "items": {
                  "type": "string",
               }
            },
            "fileStructure": {
               "description": "Whether or not the code makes changes to the website's file structure.",
               "type": "object",
               "properties": {
                  "auto": {
                     "description": "Whether or not the code makes changes, or is capable of making changes, to the website's file structure that are not explicitly initiated by a user. This does not include files that are added directly from the repository, or in the original .zip file.",
                     "type": "boolean"
                  },
                  "manual": {
                     "description": "Whether or not the code makes changes, or is capable of making changes, to the website's file structure that are explicitly initiated by the user. This does not include files that are added directly from the repository, or in the original .zip file.",
                  }
               }
            }
         }
      },
      "ppi": {
         "description": "Please indicate TRUE / FALSE as to whether the code stores any Protected Personal Information.",
         "type": "boolean"
      },
      "compatibility": {
         "type": "object",
         "description": "Please indicate the component's compatibility with Privacy Tools.",
         "properties": {
            "ppiExport": {
               "description": "Does the developer, in good faith, consider the code to be compatible with the PPI Export Tool in WordPress?",
               "type": "boolean"
            },
            "ppiErasure": {
               "description": "Does the developer, in good faith, consider the code to be compatible with the PPI Erasure Tool in WordPress?",
               "type": "boolean"
            },
            "consentAPI": {
               "description": "Does the developer, in good faith, consider the code to be compatible with the WordPress Consent API?",
               "type": "boolean"
            },
            "disclosuresTab": {
               "description": "Do the developer, in good faith, consider the code to be compatible with the Disclosure Tab?",
               "type": "boolean"
            },
            "permissionsTab": {
               "description": "Do the developer, in good faith, consider the code to be compatible with the Permissions Tab?",
               "type": "boolean"
            }
         }
      },
      "monetization": {
         "type": "object",
         "description": "This section provides details regarding monetization practices.",
         "properties": {
            "upsells": {
               "description": "Does this code promote a paid version, or extensions, or other products or services from the same author(s)?",
               "type": "boolean"
            },
            "donations": {
               "description": "Does this code contain any request, or information in order to, donate to the plugin or its developer(s)?",
               "type": "boolean"
            },
            "backLinks": {
               "description": "Does this code contain or generate, or ask the site owner / admin for permission to generate, backlinks?",
               "type": "boolean"
            },
            "affiliates": {
               "description": "Does this code contain, or generate affiliate links - i.e. links from which the author may receive conditional compensation, whether in money, or in kind?",
               "type": "boolean"
            },
            "advertising": {
               "description": "Does the code contain, or generate promotions or recommendations for any products or services not directly under the control of the author(s), for which the author(s) receive any compensation, whether in money, or in kind?",
               "type": "boolean"
            }
         }
      }
   }
}
